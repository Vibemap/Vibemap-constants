{"version":3,"file":"map.heatmap.js","sources":["../utils/map.heatmap.js"],"sourcesContent":["import chroma from 'chroma-js'\n\n// Return heatmap colors by vibe\n/* TODO: Only use primary vibe set colors on the second half of the heatmap */\n/* TODO: Get colors from vibemap-constants */\nexport const getHeatmap = (colors, vibe) => {\n\n    //let colors = color.map((color, i) => choroma(color).alpha(0.2))\n    let heatmap = []\n\n    let blue = '#008ae5'\n    // UNUSED: let gray = '#B1E2E5'\n    let yellow = '#F8EE32'\n    // UNUSED: let pink = '#ED0A87'\n    // UNUSED: let teal = '#32BFBF'\n    let white = '#FFFFFF'\n\n    let light_blue = '#54CAF2'\n    let light_green = '#9DE862'\n    let light_teal = '#7DCAA5'\n    let light_pink = '#E479B0'\n    let light_purple = '#BC94C4'\n    let light_yellow = '#FFFCC5'\n    // UNUSED: let light_orange = '#FBCBBD'\n    let orange = '#F09C1F'\n\n    /*\n    let classic = ['blue', 'teal', 'yellow', 'orange']\n    let blue_scale = ['gray', 'white', 'yellow', 'blue']\n    let orange_scale = ['#B1E2E5',  'yellow', 'orange']\n    let purple_scale = ['#B1E2E5', '#EDE70D', '#F27BA5', '#D76CE3']\n    let spectral = chroma.scale('Spectral').colors(6).reverse()\n    */\n\n    let green_purple = \"PiYG\"\n\n    const vibe_to_scale = {\n        'calm': [white, light_blue, light_green, light_yellow],\n        'buzzing': [white, light_pink, orange, light_yellow],\n        'dreamy': [white, light_purple, orange, light_yellow],\n        'oldschool': [blue, yellow,  orange],\n        'playful': [white, light_teal, light_green, yellow],\n        'solidarity': [white, light_yellow, yellow, orange],\n        'together': [white, light_teal, light_yellow],\n        'wild': green_purple\n    }\n\n    let scale = [white, light_purple, yellow, orange]\n\n    if (vibe) scale = vibe_to_scale[vibe]\n\n    //console.log('getHeatmap(colors, vibes): ', colors, vibe, scale)\n\n    if (colors) {\n        scale = chroma.scale([colors])\n    }\n\n    heatmap = chroma.scale(scale)\n        .mode('lch') // lab\n        //.domain([0, .1, 0.9, 1])\n        .colors(6)\n\n\n    heatmap = heatmap\n        //.reverse()\n        .map((color, i) => {\n            let alpha = i * 0.2\n            let rgb = chroma(color)\n                .alpha(alpha)\n                //.brighten(i * 0.05)\n                .saturate(i * 0.05)\n                .css()\n            console.log('heat layer ', i, rgb)\n            return rgb\n        })\n\n    /*\n    heatmap = chroma.cubehelix()\n        .lightness([0.3, 0.8])\n        .scale() // convert to chroma.scale\n        .correctLightness()\n        .colors(6)\n\n    heatmap = chroma.scale('Spectral')\n        //.scale() // convert to chroma.scale\n        .colors(6)\n    */\n\n    return heatmap\n}\n\nexport const getVibeStyle = (vibe = 'chill') => {\n\n    let vibe_styles = style_variables['default']['color']['vibes']\n\n    let dark_gray = style_variables['default']['color']['base']['gray']['1000']\n    let light_gray = style_variables['default']['color']['base']['gray']['200']\n\n    let css = {\n        color: dark_gray,\n        background: light_gray\n    }\n\n    if (vibe in vibe_styles) {\n        let primary = vibe_styles[vibe]['primary']\n\n        let luminance = chroma(primary).luminance()\n        let brightness = 1.2\n        if (luminance < 0.1) brightness += 2\n        if (luminance < 0.3) brightness += 1\n\n        let gradient = 'linear-gradient(45deg, ' + chroma(primary).brighten(brightness).hex() + ' 0%, ' + light_gray + ' 75%)'\n\n        css['background'] = gradient\n    }\n\n    return css\n}"],"names":["getHeatmap","colors","vibe","let","heatmap","yellow","white","light_green","light_teal","light_purple","light_yellow","orange","scale","calm","buzzing","dreamy","oldschool","playful","solidarity","together","wild","chroma","mode","map","color","i","alpha","rgb","saturate","css","console","log","getVibeStyle","vibe_styles","style_variables","dark_gray","light_gray","background","primary","luminance","brightness","gradient","brighten","hex"],"mappings":"kPAKY,MAACA,WAAa,CAACC,EAAQC,KAG/BC,IAAIC,EAAU,GAEdD,IAEIE,EAAS,UAGTC,EAAQ,UAGRC,EAAc,UACdC,EAAa,UAEbC,EAAe,UACfC,EAAe,UAEfC,EAAS,UAuBbR,IAAIS,EAEAV,EAbkB,CAClBW,KAAQ,CAACP,EApBI,UAoBeC,EAAaG,GACzCI,QAAW,CAACR,EAlBC,UAkBkBK,EAAQD,GACvCK,OAAU,CAACT,EAAOG,EAAcE,EAAQD,GACxCM,UAAa,CA9BN,UA8BaX,EAASM,GAC7BM,QAAW,CAACX,EAAOE,EAAYD,EAAaF,GAC5Ca,WAAc,CAACZ,EAAOI,EAAcL,EAAQM,GAC5CQ,SAAY,CAACb,EAAOE,EAAYE,GAChCU,KAVe,QAealB,GAFpB,CAACI,EAAOG,EAAcJ,EAAQM,GAyC1C,OAnCIV,IACAW,EAAQS,gBAAM,QAACT,MAAM,CAACX,KAS1BG,GANAA,EAAUiB,gBAAAA,QAAOT,MAAMA,GAClBU,KAAK,OAELrB,OAAO,IAKPsB,IAAI,CAACC,EAAOC,KACTtB,IAAIuB,EAAY,GAAJD,EACRE,EAAMN,gBAAM,QAACG,GACZE,MAAMA,GAENE,SAAa,IAAJH,GACTI,MAEL,OADAC,QAAQC,IAAI,cAAeN,EAAGE,GACvBA,KAkBNK,aAAe,CAAC9B,EAAO,WAEhCC,IAAI8B,EAAcC,gBAAyB,QAAS,MAAS,MAEzDC,EAAYD,gBAAyB,QAAS,MAAQ,KAAQ,KAAE,KAChEE,EAAaF,gBAAyB,QAAS,MAAQ,KAAQ,KAAE,KAErE/B,IAAI0B,EAAM,CACNL,MAAOW,EACPE,WAAYD,GAGhB,GAAIlC,KAAQ+B,EAAa,CACjBK,EAAUL,EAAY/B,GAAe,QAErCqC,EAAYlB,gBAAAA,QAAOiB,GAASC,YAChCpC,IAAIqC,EAAa,IACbD,EAAY,KAAKC,GAAc,GAC/BD,EAAY,KAAKC,GAAc,GAE/BC,EAAW,0BAA4BpB,gBAAM,QAACiB,GAASI,SAASF,GAAYG,MAAQ,QAAUP,EAAa,QAE/GP,EAAgB,WAAIY,EAGxB,OAAOZ"}